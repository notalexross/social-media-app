{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": ["react-app", "react-app/jest", "airbnb-typescript"],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module",
    "project": "./tsconfig.eslint.json"
  },
  "plugins": ["react"],
  "ignorePatterns": ["/build", "/coverage"],
  "rules": {
    "@typescript-eslint/comma-dangle": ["error", "never"],
    "@typescript-eslint/lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "@typescript-eslint/semi": ["error", "never"],
    "@typescript-eslint/type-annotation-spacing": ["error", { "after": true }],
    "arrow-parens": ["error", "as-needed"],
    "jsx-a11y/label-has-associated-control": [
      "error",
      {
        "labelComponents": [],
        "labelAttributes": [],
        "controlComponents": [],
        "assert": "either",
        "depth": 25
      }
    ],
    "linebreak-style": 0,
    "max-len": [
      "error",
      100,
      2,
      {
        "ignoreUrls": true,
        "ignoreComments": true,
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true
      }
    ],
    "no-alert": "off",
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-else-return": ["error", { "allowElseIf": true }],
    "no-param-reassign": ["error", { "props": false }],
    "no-plusplus": ["error", { "allowForLoopAfterthoughts": true }],
    "no-underscore-dangle": [
      "error",
      {
        "allow": ["__REDUX_DEVTOOLS_EXTENSION_COMPOSE__"],
        "allowAfterThis": true,
        "allowAfterSuper": false,
        "enforceInMethodNames": true,
        "allowAfterThisConstructor": false,
        "allowFunctionParams": true
      }
    ],
    "no-unused-expressions": ["error", { "allowShortCircuit": true, "allowTernary": true }],
    "object-curly-newline": ["error", { "consistent": true }],
    "operator-linebreak": ["error", "after"],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": ["block", "block-like", "cjs-export", "class", "export", "import"],
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": ["return"]
      },
      { "blankLine": "any", "prev": ["export", "import"], "next": ["export", "import"] }
    ],
    "react/jsx-filename-extension": "off",
    "react/jsx-props-no-spreading": "off",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/require-default-props": "off",
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "outerIIFEBody": 1,
        "FunctionDeclaration": {
          "parameters": 1,
          "body": 1
        },
        "FunctionExpression": {
          "parameters": 1,
          "body": 1
        },
        "CallExpression": {
          "arguments": 1
        },
        "ArrayExpression": 1,
        "ObjectExpression": 1,
        "ImportDeclaration": 1,
        "flatTernaryExpressions": false,
        "ignoredNodes": [
          "JSXElement",
          "JSXElement > *",
          "JSXAttribute",
          "JSXIdentifier",
          "JSXNamespacedName",
          "JSXMemberExpression",
          "JSXSpreadAttribute",
          "JSXExpressionContainer",
          "JSXOpeningElement",
          "JSXClosingElement",
          "JSXFragment",
          "JSXOpeningFragment",
          "JSXClosingFragment",
          "JSXText",
          "JSXEmptyExpression",
          "JSXSpreadChild",
          "TSTypeParameterInstantiation"
        ],
        "ignoreComments": false,
        "offsetTernaryExpressions": false
      }
    ]
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ]
    }
  ]
}
